{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","placeholder","onClick","setNewName","newNumber","handleNumberChange","setNewNumber","type","Persons","persons","isNaN","filter","person","name","toLowerCase","includes","number","map","className","deletePerson","id","baseUrl","requests","getAll","axios","get","then","response","data","create","newObject","post","remove","personID","delete","update","put","Notification","notification","message","App","useState","setPersons","setNewFilter","msg","setNotification","useEffect","personService","initialPersons","event","target","preventDefault","some","window","confirm","ID","find","p","nameObject","console","log","returnedPerson","setTimeout","catch","err","concat","error","updatedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.520f321c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n        Search by name or phone number:\r\n        <input value={props.newFilter} onChange={props.handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                <input value={props.newName} onChange={props.handleNameChange} placeholder={\"Add a new person\"} onClick={() => {props.setNewName('')}} />      \r\n            </div>\r\n            <div>\r\n                <input value={props.newNumber} onChange={props.handleNumberChange} placeholder={\"Add a phone number\"} onClick={() => {props.setNewNumber('')}} />\r\n            </div>  \r\n            <button type=\"submit\">Add</button>\r\n        </form>      \r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    let persons = props.persons\r\n    \r\n    if(props.newFilter !== '') {\r\n        if(isNaN(props.newFilter)) {\r\n            persons = props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase()))\r\n        }\r\n        else {\r\n            persons = props.persons.filter(person => person.number.includes(props.newFilter))\r\n        }\r\n        \r\n    }\r\n    const showPersons = () => persons.map(person => \r\n        <li className='person' key={person.id}>\r\n            {person.name} {person.number} <button onClick={() => props.deletePerson(person)}> Delete </button>\r\n        </li>\r\n    )\r\n\r\n  return ( \r\n      <ul> {showPersons()} </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (personID) => {\r\n    const request = axios.delete(`${baseUrl}/${personID}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst requests = {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n}\r\n\r\nexport default requests\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if(notification.message === null) {\r\n        return null\r\n    }\r\n    else if (notification.type === 'success') {\r\n        return (\r\n            <div className='success'>\r\n            {notification.message}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='error'>\r\n                {notification.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n\r\n  let msg = {\r\n    message: null,\r\n    type: null\r\n  }\r\n  const [ notification, setNotification ] = useState(msg)\r\n\r\n  useEffect(() => {\r\n    personService\r\n     .getAll()\r\n     .then(initialPersons => {\r\n       setPersons(initialPersons)\r\n     })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    if (persons.some(person => person.name === newName)) {\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(p => p.name === newName)\r\n        const ID = person.id\r\n        const nameObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n        }\r\n        console.log(ID, nameObject)\r\n      \r\n        personService\r\n          .update(ID, nameObject)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person))\r\n            msg = {\r\n              message: `Updated ${newName} phone number`,\r\n              type: 'success'\r\n            }\r\n            setNotification(msg)\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setTimeout(() => {\r\n              setNotification({message: null, type: null})\r\n            }, 5000)\r\n          })\r\n          .catch(err => {\r\n            msg = {\r\n              message: `${newName} has already been removed from server`,\r\n              type: 'error'\r\n            }\r\n            setNotification(msg)\r\n            setTimeout(() => {\r\n              setNotification({message: null, type: null})\r\n            }, 5000)\r\n          })\r\n        }\r\n    }\r\n    else if(persons.some(person => person.number === newNumber))\r\n    {\r\n      msg = {\r\n        message: `Phone number ${newNumber} is already in use!`,\r\n        type: 'success'\r\n      }\r\n      setNotification(msg)\r\n      setNewNumber('')\r\n      setTimeout(() => {\r\n        setNotification({name: null, type: null})\r\n      }, 5000)\r\n    }\r\n    else {\r\n      const nameObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      personService\r\n        .create(nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          msg = {\r\n            message: `Added ${newName}`,\r\n            type: 'success'\r\n          }\r\n          setNotification(msg)\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setTimeout(() => {\r\n            setNotification({message: null, type: null})\r\n          }, 5000)\r\n        })\r\n        .catch(err => {\r\n          msg = {\r\n            message: err.response.data.error,\r\n            type: 'error'\r\n          }\r\n          setNotification(msg)\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setTimeout(() => {\r\n            setNotification({message: null, type: null})\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (person) => {\r\n    const personID = person.id\r\n\r\n    if(window.confirm(`Delete ${person.name}?`)) {\r\n    console.log(`Poistetaan henkilö ${person.name}`)\r\n    \r\n    personService\r\n      .remove(personID)\r\n      .then(response => {\r\n        const updatedPersons = persons.filter(p => p.id !== personID)\r\n        setPersons(updatedPersons)\r\n        msg = {\r\n          message: `Deleted ${person.name}`,\r\n          type: 'success'\r\n        }\r\n        setNotification(msg)\r\n        setTimeout(() => {\r\n          setNotification({message: null, type: null})\r\n        }, 5000)\r\n      })\r\n      .catch(err => {\r\n        msg = {\r\n          message: `${person.name} has already been removed from server`,\r\n          type: 'error'\r\n        }\r\n        setNotification(msg)\r\n        setTimeout(() => {\r\n          setNotification({message: null, type: null})\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification notification={notification} />\r\n      \r\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\r\n\r\n      <h2> Add a new person </h2>\r\n      <PersonForm addPerson={addPerson} newName={newName} setNewName={setNewName} handleNameChange={handleNameChange}\r\n                  newNumber={newNumber} setNewNumber={setNewNumber} handleNumberChange={handleNumberChange} />\r\n         \r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}